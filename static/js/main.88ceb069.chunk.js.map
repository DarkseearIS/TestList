{"version":3,"sources":["serviceWorker.js","api/api.js","reducers/user-reducer.js","store.js","compponents/UserInfo.js","compponents/asyncValidate.js","compponents/MaterialUiForm.js","compponents/Modals.js","compponents/ShowUser.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","instance","axios","baseURL","userAPI","get","data","post","initialState","user","getUser","dispatch","then","response","type","userReducer","state","action","reducer","combineReducers","form","reduxFormReducer","store","createStore","applyMiddleware","thunk","useStyles","makeStyles","theme","root","display","margin","spacing","orange","color","palette","getContrastText","deepOrange","backgroundColor","idStyle","width","fontSize","idStyleDiv","textAlign","marginTop","UserInfo","id","name","lastName","email","classes","className","Avatar","alt","charAt","asyncValidate","values","ms","Promise","resolve","setTimeout","includes","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","variant","helperText","reduxForm","validate","errors","forEach","field","test","handleSubmit","pristine","submitting","onSubmit","Field","component","Button","disabled","getModalStyle","top","left","transform","paper","position","background","border","boxShadow","shadows","padding","stylePaper","height","borderStyle","cursor","compose","connect","props","React","useState","modalStyle","open","setOpen","body","style","Paper","elevation","onClick","Modal","onClose","aria-labelledby","aria-describedby","setUser","useEffect","flexWrap","count","map","el","key","_id","classesPaper","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.88ceb069.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\"\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: 'http://armspb.mooo.com:3300/api/',\r\n\r\n\r\n    }\r\n);\r\n\r\nexport const userAPI = {\r\n    getUser(){\r\n        return instance.get(`user`)\r\n    },\r\n\r\n    setUserInfo(data) {\r\n        debugger\r\n        return instance.post(`addUser`, data)\r\n    }\r\n}","import {userAPI} from \"../api/api\";\r\n\r\nconst USER = \"USER\";\r\n\r\nconst initialState = {\r\n    user:null\r\n};\r\n\r\nconst userReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport const setUser = (user) => ({type:USER, user}) ;\r\n\r\nexport const getUser = () => {\r\n    return (dispatch) => {\r\n        userAPI.getUser()\r\n            .then(response => {\r\n                dispatch(setUser(response.data))\r\n            })\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default userReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\nimport userReducer from \"./reducers/user-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducer = combineReducers({\r\n    userReducer,\r\n    form: reduxFormReducer, // mounted under \"form\"\r\n});\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    idStyle: {\r\n        backgroundColor: \"silver\",\r\n        width: '50px',\r\n        margin:'0 0 0 ',\r\n        fontSize: '26px'\r\n    },\r\n    idStyleDiv: {\r\n        textAlign:\"center\",\r\n        marginTop:\"20%\"\r\n    }\r\n}));\r\n\r\nconst UserInfo = ({id, name, lastName, email}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return <div>\r\n        <div className={classes.root}>\r\n            <div className={classes.idStyle} >\r\n               <div className={classes.idStyleDiv}>\r\n                   #{id}\r\n               </div>\r\n            </div>\r\n            <Avatar alt=\"Remy Sharp\" className={classes.orange} >\r\n                {name.charAt(0) + lastName.charAt(0)}\r\n            </Avatar>\r\n            <div>\r\n                <div> {name + \" \" + lastName} </div>\r\n                <div> {email} </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n};\r\n\r\nexport default UserInfo;","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst asyncValidate = (values /*, dispatch */) => {\r\n    return sleep(1000).then(() => {\r\n        // simulate server latency\r\n        if (['foo@foo.com', 'bar@bar.com'].includes(values.email)) {\r\n            // eslint-disable-next-line no-throw-literal\r\n            throw { email: 'Email already Exists' }\r\n        }\r\n    })\r\n}\r\n\r\nexport default asyncValidate","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport asyncValidate from \"./asyncValidate\"\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 500,\r\n        },\r\n    },\r\n}));\r\n\r\nconst validate = values => {\r\n\r\n    const errors = {};\r\n    const requiredFields = [\r\n        'firstName',\r\n        'lastName',\r\n        'email',\r\n        'favoriteColor',\r\n        'notes'\r\n    ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[field]) {\r\n            errors[field] = 'Required'\r\n        }\r\n    })\r\n    if (\r\n        values.email &&\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n};\r\n\r\nconst renderTextField = ({\r\n                             label,\r\n                             input,\r\n                             meta: { touched, invalid, error },\r\n                             ...custom\r\n                         }) => (\r\n    <TextField\r\n        variant=\"outlined\"\r\n        label={label}\r\n        error={touched && invalid}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n);\r\n\r\n\r\nconst MaterialUiForm = ({handleSubmit, pristine, submitting}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.root} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name=\"name\" component={renderTextField} label=\"First Name\"/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"email\" component={renderTextField} label=\"Email\"/>\r\n            </div>\r\n            <div>\r\n\r\n                <Button type=\"submit\" color=\"secondary\" disabled={pristine || submitting}>\r\n                    ДОБАВИТЬ\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'MaterialUiForm', // a unique identifier for this form\r\n    validate,\r\n    asyncValidate\r\n})(MaterialUiForm)","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport MaterialUiForm from \"./MaterialUiForm\";\r\nimport {userAPI} from \"../api/api\";\r\nimport {getUser} from \"../reducers/user-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50 ;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 500,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #fff',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3)\r\n    },\r\n    stylePaper: {\r\n        height: theme.spacing(7),\r\n        borderStyle:'dashed',\r\n        cursor:\"pointer\",\r\n        textAlign:\"center\",\r\n        fontSize: \"36px\"\r\n    }\r\n}));\r\n\r\nconst Modals = (props) => {\r\n\r\n    const onSubmit = (data) => {\r\n        let {name, lastName, email} = data;\r\n        userAPI.setUserInfo({name, lastName, email})\r\n            .then(response => props.getUser())\r\n            .then(setOpen(false));\r\n    };\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\"> Создание пользователя</h2>\r\n\r\n            <MaterialUiForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Paper className={classes.stylePaper} style={{borderStyle:'dashed', cursor:\"pointer\"}} elevation={0} onClick={handleOpen}>\r\n                    +\r\n            </Paper>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user:state.userReducer.user\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUser})\r\n)(Modals);","import React, {useEffect, useState} from \"react\";\r\nimport {getUser} from \"../reducers/user-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Modals from \"./Modals\";\r\n\r\nconst ShowUser = (props) => {\r\n\r\n    let [user, setUser] = useState(props.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!props.user) props.getUser();\r\n        setUser(props.user);\r\n    }, [props.user]);\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: theme.spacing(35),\r\n                height: theme.spacing(7)\r\n            },\r\n        },\r\n    }));\r\n\r\n\r\n    let count = 0;\r\n\r\n    const countS = () => {\r\n        count++;\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return <div className={classes.root}>\r\n\r\n        {!user ? null : user.map(el => <div key={el._id}>\r\n            {countS()}\r\n            <Paper elevation={3}>\r\n                <UserInfo id={count} email={el.email} name={el.name} lastName={el.lastName}/>\r\n            </Paper>\r\n\r\n        </div>)}\r\n\r\n        <div>\r\n            <Modals classesPaper={classes}/>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUser})\r\n)(ShowUser);","import React from 'react';\nimport './App.css';\nimport ShowUser from \"./compponents/ShowUser\";\n\n\nfunction App() {\n    return (\n        <div>\n            <ShowUser/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}